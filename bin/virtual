#!/usr/bin/env fish

function cache
    set cmd $argv[1]
    set env $argv[2]
    set dir $argv[3]
    set cache ~/.cache/{$env}_venv.tar.xz

    switch $cmd
        case 'set'
            tar -caf $cache $dir/*
        case 'get'
            echo "Using cache: $cache"
            tar -xf $cache -C $dir
        case 'get-name'
            echo $cache
        case '*'
            echo "Invalid cache command: '$cmd'"
            return -1
    end
end

# print help message
function help
    echo 'Boostrap development environment using latest dev runtime.'
    echo
    echo 'Usage: virtual <environment> [dir]'
    echo
    echo 'Arguments:'
    echo '  environment The environment to setup'
    echo
    echo 'Options:'
    echo '  -h, --help  Print this help message'
end

function fetch
    set url $argv[1]
    set dest $argv[2]

    curl -L# $url | tar -zxf - --strip-components 1 -C $dest
end

if not set -q argv[1]; or string match -qr '(-h|--help)' -- "$argv[1]"
    help
    functions -e help
    exit
end

# args
set environment $argv[1]
set dir (
    if set -q argv[2]
        echo $argv[2]
    else
        echo '.venv'
    end
)

mkdir -p $dir

# setup environment
switch $environment
    case node
        cache get node $dir

        set -l ver (curl -sL 'https://semver.io/node/unstable')
        set -l yarn_ver (curl -sL 'https://semver.io/yarn/unstable')
        set -l cache (cache get-name node $dir)

        if test -f $cache
            cache get node $dir
        else
            echo "Fetching Node $ver"
            fetch "https://nodejs.org/dist/v$ver/node-v$ver-linux-x64.tar.gz" $dir

            echo "Fetching Yarn $yarn_ver"
            fetch "https://github.com/yarnpkg/yarn/releases/download/v$yarn_ver/yarn-v$yarn_ver.tar.gz" $dir

            # remove provided npm
            rm -rf $dir/{bin/npm,lib/node_modules}

            # patch yarn to use $dir as $HOME
            sed -i "s|  node|  HOME=$PWD/$dir node|g" $dir/bin/yarn

            # install ncu and latest npm
            env PATH=(string join : $PATH):$PWD/$dir/bin yarn global add \
                npm-check-updates \
                npm@next

            # create cache
            cache set node $dir
        end

    case go
        set -l cache (cache get-name go $dir)

        if test -f $cache
            cache get go $dir
        else
            set -l url (
                curl -sL 'https://golang.org/dl/' \
                    | grep -m1 linux \
                    | string match -r 'href="(http.*)"'
            )[2]

            echo "Fetching Go:"
            fetch $url $dir

            # create cache
            cache set node $dir
        end

    case python
        python -m venv $dir
        cache_venv python

    case '*'
        echo "Unsupported environment: $argv[1]"
        exit -1
end

