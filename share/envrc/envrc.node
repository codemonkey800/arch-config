#!/bin/bash

set -e

export NODE_HOME='.node'

ARCH="$([[ $(uname -m) == 'x86_64' ]] && echo x64 || echo x86)"
OS="$(echo $(uname) | tr '[:upper:]' '[:lower:]')"

# prints a message surrounded by a bunch of equal sign
# as wide as the terminal.
_msg() {
    local total_cols="$(tput cols)"
    local left=0
    local right=0

    let "total_cols -= ${#1}"
    let 'total_cols -= 2'
    let 'left = total_cols / 2'
    let 'right = total_cols - left'

    # helper function that prints $2 spaces
    # using the character or string $1
    _print_side() {
        printf "%${2}s" | tr ' ' "$1"
    }

    _print_side '=' $left
    printf " $1 "
    _print_side '=' $right
    printf '\n'
}

# helper function that fetches the latest and greatest
_latest() {
    curl -sL "http://semver.io/$1/unstable"
}

# fetches node from the official mirror
# and removes npm because who needs that anymore
get-node() {
    # build up url and use latest version of node
    local ver="$(_latest node)"
    local url='https://nodejs.org/dist'
    local url="$url/v$ver"
    local url="$url/node-v$ver-$OS-$ARCH"

    wget --show-progress -qO- "$url.tar.gz" | tar -zxf - -C $NODE_HOME --strip-components=1

    # remove any trace of npm
    rm -rf $NODE_HOME/bin/npm $NODE_HOME/lib
}

# fetches binary distribution of yarn
# and modifies script to treat $NODE_HOME as $HOME.
#
# this is mostly so that your actual home directory
# doesn't get populated with a bunch of .yarn* files.
get-yarn() {
    local url='https://yarnpkg.com/latest.tar.gz'
    wget --show-progress -qO- "$url" | tar -zxf - -C $NODE_HOME --strip-components=1

    sed -i "s/  node/  HOME=$NODE_HOME node/g" $NODE_HOME/bin/yarn

    # add some useful packages to global
    yarn global add npm@next npm-check-updates
}


main() {
    mkdir -p $NODE_HOME

    # set up environment variables for node project
    layout node
    export PATH=$PATH:$NODE_HOME/bin

    # fetch node or yarn if they're not in $NODE_HOME/bin
    [[ ! -f $NODE_HOME/bin/node ]] && _msg 'Fetching Node' && get-node
    [[ ! -f $NODE_HOME/bin/yarn ]] && _msg 'Fetching Yarn' && get-yarn
}

# if a developer doesn't have direnv installed, they
# can still run the script to set up their environment.
main "$@"

