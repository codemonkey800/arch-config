" This is a stripped down version of my neovim init.vim file
" that is used for IDEA based IDEs. It includes basic and mapleader
" based mappings as well as mappings for IDE actions.

" idea-vim extensions {{

" vim-surround plugin
set surround

" commentary.vim
set commentary

" }}

" keymaps {{

let g:mapleader = ','

" base maps {{

" modified insert mode {{

function! SmartInsert(key)
  if &buftype ==# 'terminal'
    startinsert
  elseif len(getline('.')) == 0
    return 'cc'
  else
    return a:key
  endif
endfunction

nnoremap <expr> i SmartInsert('i')
nnoremap <expr> a SmartInsert('a')

" }}

" improves <C-l>
nnoremap <C-l> :nohlsearch<CR> :diffupdate<CR> :syntax sync fromstart<CR><C-l>

" escape insert mode
inoremap jk <esc>

" move vertically by visual line
noremap j gj
noremap k gk

" swap capital H and L for begin and end of lines
noremap H ^
noremap L $

" quit and force quit maps
nnoremap Q :q!<CR>
nnoremap q :q<CR>

" space open/closes folds
nnoremap <space> za

" adds a new line below or above without entering insert mode
noremap o o<esc>k
noremap O O<esc>j

" redo last thing
noremap U :redo<CR>

" save current file
nnoremap <C-s> :w<CR>
inoremap <C-s> <Esc>:w<CR>li

" Go back from tag using Ctrl-[, which makes more sense than Ctrl-t
nnoremap gt <C-]>
nnoremap gT <C-t>
nnoremap <C-]> <nop>
nnoremap <C-t> <nop>

" }}

" fancy maps {{

" run file if it's executable {{

function! ExecuteCurrentFile()
  if executable(expand('%:p'))
    !./%
  endif
endfunction

nnoremap <leader>r :call ExecuteCurrentFile()<CR>

" }}

" sort things
noremap <leader>sa :sort<CR>
noremap <leader>sd :sort!<CR>

" select all text
noremap <leader>a ggvG$

" opens up command edit
nnoremap <M-c> q:
vnoremap <M-c> q:

" }}

" spell maps {{

function! ToggleSpell()
    if &spell
        set nospell
    else
        set spell
    end
endfunction

nnoremap <M-s> :call ToggleSpell()<CR>

" }}

" }}

